include widgets/_menu
include widgets/_slider

//- POPUP BASE

mixin popup
	.popup.uk-modal(data-uk-modal)&attributes(attributes)
		.popup__body.uk-modal-dialog.uk-margin-auto-vertical
			button.popup__close.uk-modal-close-default(type="button" data-uk-close)
			block

mixin popup-video-16-9
	.popup-video.popup.uk-modal(data-uk-modal)&attributes(attributes)
		.popup__body.uk-modal-dialog.uk-margin-auto-vertical.embed-responsive.embed-responsive-16by9
			button.popup__close.uk-modal-close-default(type="button" data-uk-close)
			block

mixin quiz 
	.quiz 

		h1.title TITLE

		ul.quiz-items 
			li
				h2 item 1
				ul.quiz-radios
					li
					li
					li

			li
				h2 item 2
				ul.quiz-options
					li
					li
					li
			li
				h2 item 3
				input.quiz-input
		ul.quiz-nav 
		a.quiz-prev(href="#") PREV
		a.quiz-next(href="#") NEXT
		
		progress.quiz-progress.uk-progress(value="0" max="100")

//- ICONSET

mixin icon(icon, filler = 'currentColor')
	case icon
		when 'phone'
			svg(viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg")&attributes(attributes)
				rect(x='1.44336' y='0.612305' width='25.9558' height='25.9558' rx='6.5' stroke=filler)
				path(d='M22.1357 20.478C22.9059 19.7116 22.9059 18.6897 22.1357 17.943L20.0277 15.8993C19.6628 15.5259 19.2169 15.3294 18.7304 15.3294C18.2642 15.3294 17.8183 15.5259 17.4331 15.8993L16.217 17.0784C16.1156 17.0194 16.0143 16.9801 15.9129 16.9211C15.771 16.8622 15.6494 16.7836 15.5278 16.7246C14.3927 16.0368 13.3589 15.1132 12.386 13.9538C11.8995 13.3643 11.5752 12.873 11.3522 12.3621C11.6563 12.087 11.9603 11.7922 12.2441 11.5171C12.3455 11.4188 12.4671 11.3009 12.5684 11.2027C12.9535 10.8293 13.1765 10.3773 13.1765 9.92534C13.1765 9.47337 12.9738 9.04104 12.5684 8.64802L11.5347 7.62616C11.413 7.50826 11.2914 7.39035 11.1901 7.27244C10.9671 7.03663 10.7239 6.80082 10.4806 6.58465C10.1158 6.23093 9.66986 6.03442 9.20366 6.03442C8.73745 6.03442 8.29152 6.23093 7.9064 6.58465L6.58887 7.86198C6.1024 8.3336 5.81862 8.90349 5.75782 9.57162C5.67674 10.6524 6.00105 11.6546 6.24429 12.3228C6.85238 13.9342 7.78478 15.4473 9.16312 17.0587C10.8455 19.0042 12.8522 20.5173 15.1427 21.5981C16.0143 22.0108 17.1899 22.4824 18.5074 22.561C18.5885 22.561 18.6696 22.561 18.7507 22.561C19.6223 22.561 20.3722 22.2466 20.9398 21.6374L20.9601 21.6178C21.1628 21.382 21.3857 21.1658 21.629 20.9496C21.8114 20.8121 21.9735 20.6549 22.1357 20.478ZM20.9398 20.2618C20.6966 20.4976 20.433 20.7335 20.2101 21.0086C19.825 21.4213 19.3588 21.5981 18.7709 21.5981C18.7101 21.5981 18.6493 21.5981 18.5885 21.5981C17.4534 21.4999 16.3994 21.0872 15.5886 20.7138C13.4197 19.692 11.5347 18.2574 9.95363 16.4299C8.65638 14.9167 7.78478 13.5018 7.19696 11.9887C6.83211 11.0651 6.71049 10.338 6.7713 9.66988C6.81184 9.23755 6.99426 8.88383 7.29831 8.56942L8.59557 7.31174C8.77799 7.13488 8.98069 7.03663 9.18339 7.03663C9.42662 7.03663 9.62932 7.17419 9.77121 7.31174C10.0144 7.52791 10.2171 7.74407 10.4604 7.97988C10.582 8.09779 10.7036 8.2157 10.8252 8.3336L11.859 9.33581C12.0617 9.53232 12.163 9.72883 12.163 9.92534C12.163 10.1219 12.0617 10.3184 11.859 10.5149C11.7576 10.6131 11.636 10.731 11.5347 10.8293C11.2104 11.1437 10.9063 11.4385 10.582 11.7332L10.5617 11.7529C10.2374 12.0673 10.2982 12.3817 10.359 12.5782C10.359 12.5979 10.359 12.5979 10.3793 12.6175C10.6428 13.2464 11.0279 13.8556 11.6157 14.563C12.6698 15.8207 13.7846 16.8032 15.0008 17.55C15.1629 17.6482 15.3251 17.7268 15.467 17.8054C15.6089 17.8644 15.7305 17.943 15.8521 18.002C15.8724 18.002 15.8724 18.0216 15.8926 18.0216C16.0143 18.0806 16.1359 18.1199 16.2575 18.1199C16.5615 18.1199 16.7642 17.9234 16.825 17.8644L18.1426 16.5871C18.2642 16.4692 18.4872 16.312 18.7304 16.312C18.9736 16.312 19.1561 16.4692 19.2979 16.5871L21.406 18.6308C21.8925 19.1024 21.6695 19.5347 21.3857 19.8099C21.2641 19.9671 21.1019 20.1046 20.9398 20.2618ZM15.1021 8.60872C15.1427 8.3336 15.4062 8.15674 15.6899 8.2157C16.9061 8.41221 18.0007 8.96244 18.8723 9.82709C19.7439 10.6917 20.3114 11.7529 20.5344 12.9123C20.5749 13.1874 20.3925 13.4429 20.129 13.4822C20.1087 13.4822 20.0682 13.4822 20.0479 13.4822C19.8047 13.4822 19.5817 13.3053 19.5412 13.0695C19.379 12.1066 18.8926 11.2027 18.1628 10.5149C17.4331 9.80744 16.521 9.35546 15.5278 9.1786C15.2237 9.1393 15.0413 8.88383 15.1021 8.60872ZM22.8046 12.932C22.5006 11.2027 21.6492 9.63058 20.3722 8.37291C19.075 7.11523 17.4534 6.30954 15.6697 6.01477C15.3859 5.97547 15.2035 5.72 15.2643 5.44489C15.3251 5.16977 15.5683 4.99291 15.8521 5.05187C17.8183 5.36628 19.6425 6.27024 21.0817 7.66546C22.5208 9.06069 23.4735 10.8293 23.7978 12.7551C23.8383 13.0302 23.6559 13.2857 23.3924 13.325C23.3721 13.325 23.3316 13.325 23.3113 13.325C23.0681 13.3446 22.8451 13.1678 22.8046 12.932Z' fill=filler)

		when 'logo'
			svg(viewBox="0 0 116 31" fill="none" xmlns="http://www.w3.org/2000/svg")&attributes(attributes)
				path(d='M46.1815 9.1582L47.1582 10.6774C46.8206 11.1356 46.3624 11.4853 45.7836 11.7264C45.2169 11.9676 44.596 12.0881 43.9208 12.0881C42.5945 12.0881 41.5274 11.6963 40.7196 10.9125C39.9117 10.1288 39.5078 9.09791 39.5078 7.81984C39.5078 6.6141 39.9057 5.60129 40.7015 4.78139C41.4973 3.9615 42.5041 3.55155 43.7218 3.55155C45.1687 3.55155 46.2599 3.91929 46.9954 4.65479L46.0188 6.30061C45.4762 5.77009 44.801 5.50483 43.9931 5.50483C43.3903 5.50483 42.8597 5.72186 42.4016 6.15593C41.9554 6.57793 41.7324 7.13257 41.7324 7.81984C41.7324 8.51916 41.9615 9.08585 42.4197 9.51992C42.8899 9.94192 43.4445 10.1529 44.0836 10.1529C44.8793 10.1529 45.5787 9.82135 46.1815 9.1582Z' fill='white')
				path(d='M49.0914 10.8944C48.2836 10.0866 47.8796 9.06174 47.8796 7.81984C47.8796 6.57793 48.2836 5.55909 49.0914 4.76331C49.9113 3.95547 50.9844 3.55155 52.3107 3.55155C53.637 3.55155 54.7041 3.95547 55.5119 4.76331C56.3318 5.55909 56.7418 6.57793 56.7418 7.81984C56.7418 9.06174 56.3318 10.0866 55.5119 10.8944C54.7041 11.6902 53.637 12.0881 52.3107 12.0881C50.9844 12.0881 49.9113 11.6902 49.0914 10.8944ZM50.1042 7.81984C50.1042 8.49504 50.3092 9.05571 50.7191 9.50183C51.1411 9.93589 51.6717 10.1529 52.3107 10.1529C52.9618 10.1529 53.4923 9.94192 53.9023 9.51992C54.3243 9.08585 54.5353 8.51916 54.5353 7.81984C54.5353 7.14463 54.3243 6.58999 53.9023 6.15593C53.4803 5.72186 52.9497 5.50483 52.3107 5.50483C51.6837 5.50483 51.1592 5.72186 50.7372 6.15593C50.3152 6.57793 50.1042 7.13257 50.1042 7.81984Z' fill='white')
				path(d='M58.5417 11.8892V3.75049H60.6216V4.56436C61.2124 3.92532 61.9901 3.6058 62.9547 3.6058C65.1853 3.6058 66.3006 4.77536 66.3006 7.11448V11.8892H64.2207V7.4762C64.2207 6.19813 63.6118 5.55909 62.394 5.55909C61.7309 5.55909 61.1401 5.81832 60.6216 6.33679V11.8892H58.5417Z' fill='white')
				path(d='M72.231 10.1529C72.436 10.0203 72.5384 9.83341 72.5384 9.59226C72.5384 9.35111 72.3877 9.1582 72.0863 9.01351C71.7849 8.85676 71.4171 8.72413 70.983 8.61562C70.561 8.49504 70.133 8.35639 69.6989 8.19964C69.2649 8.03084 68.8971 7.76558 68.5957 7.40386C68.2943 7.04214 68.1435 6.58396 68.1435 6.02932C68.1435 5.25766 68.4209 4.65479 68.9755 4.22073C69.5422 3.77461 70.2596 3.55155 71.1277 3.55155C72.454 3.55155 73.4849 3.89518 74.2204 4.58245L73.4427 6.0655C72.7796 5.54703 72.0441 5.2878 71.2362 5.2878C70.9348 5.2878 70.6876 5.36014 70.4947 5.50483C70.3139 5.63746 70.2234 5.80024 70.2234 5.99315C70.2234 6.2343 70.3741 6.43324 70.6756 6.58999C70.977 6.74673 71.3387 6.87936 71.7607 6.98788C72.1948 7.0964 72.6289 7.22903 73.0629 7.38577C73.497 7.54252 73.8647 7.80175 74.1662 8.16347C74.4676 8.51313 74.6183 8.95322 74.6183 9.48374C74.6183 10.2795 74.3169 10.9125 73.714 11.3828C73.1232 11.853 72.3274 12.0881 71.3267 12.0881C70.6274 12.0881 69.9341 11.9374 69.2468 11.636C68.5716 11.3345 68.1315 11.0211 67.9265 10.6955L68.9393 9.33906C69.1805 9.60432 69.5603 9.83943 70.0787 10.0444C70.5972 10.2494 71.0614 10.3519 71.4714 10.3519C71.7849 10.3519 72.0381 10.2856 72.231 10.1529Z' fill='white')
				path(d='M76.2702 8.79648V1.48975H78.3501V3.75049H80.9726V5.70378H78.3501V8.66988C78.3501 9.64652 78.6757 10.1348 79.3267 10.1348C79.7367 10.1348 80.1527 9.97809 80.5747 9.6646L81.2077 11.2743C80.5566 11.8048 79.7548 12.07 78.8023 12.07C77.91 12.07 77.2649 11.7987 76.8671 11.2562C76.4692 10.7015 76.2702 9.88164 76.2702 8.79648Z' fill='white')
				path(d='M83.6014 5.84846L83.0769 4.32924C83.9571 3.81078 84.9156 3.55155 85.9526 3.55155C87.1101 3.55155 87.942 3.83489 88.4484 4.40159C88.9548 4.96828 89.208 5.81229 89.208 6.93362V11.8892H87.3994V10.9487C86.9051 11.648 86.1033 11.9977 84.994 11.9977C84.2344 11.9977 83.6195 11.7746 83.1492 11.3285C82.679 10.8824 82.4439 10.2735 82.4439 9.50183C82.4439 8.64576 82.7212 7.99467 83.2758 7.54855C83.8305 7.09037 84.5419 6.86128 85.41 6.86128C86.1575 6.86128 86.7725 7.03611 87.2548 7.38577C87.2789 6.67439 87.1764 6.1499 86.9473 5.81229C86.7182 5.46263 86.3143 5.2878 85.7355 5.2878C85.1327 5.2878 84.4213 5.47469 83.6014 5.84846ZM85.6813 10.2434C86.3806 10.2434 86.9051 9.99618 87.2548 9.50183V8.66988C86.9051 8.40461 86.4288 8.27198 85.826 8.27198C85.4522 8.27198 85.1387 8.36241 84.8855 8.54327C84.6444 8.71208 84.5238 8.95925 84.5238 9.2848C84.5238 9.58623 84.6323 9.82135 84.8493 9.99015C85.0664 10.159 85.3437 10.2434 85.6813 10.2434Z' fill='white')
				path(d='M91.3402 11.8892V3.75049H93.4201V4.56436C94.0109 3.92532 94.7886 3.6058 95.7532 3.6058C97.9838 3.6058 99.0991 4.77536 99.0991 7.11448V11.8892H97.0192V7.4762C97.0192 6.19813 96.4103 5.55909 95.1925 5.55909C94.5294 5.55909 93.9386 5.81832 93.4201 6.33679V11.8892H91.3402Z' fill='white')
				path(d='M101.032 8.79648V1.48975H103.112V3.75049H105.735V5.70378H103.112V8.66988C103.112 9.64652 103.438 10.1348 104.089 10.1348C104.499 10.1348 104.915 9.97809 105.337 9.6646L105.97 11.2743C105.319 11.8048 104.517 12.07 103.564 12.07C102.672 12.07 102.027 11.7987 101.629 11.2562C101.231 10.7015 101.032 9.88164 101.032 8.79648Z' fill='white')
				path(d='M108.118 10.8944C107.31 10.0866 106.906 9.06174 106.906 7.81984C106.906 6.57793 107.31 5.55909 108.118 4.76331C108.938 3.95547 110.011 3.55155 111.337 3.55155C112.664 3.55155 113.731 3.95547 114.539 4.76331C115.358 5.55909 115.768 6.57793 115.768 7.81984C115.768 9.06174 115.358 10.0866 114.539 10.8944C113.731 11.6902 112.664 12.0881 111.337 12.0881C110.011 12.0881 108.938 11.6902 108.118 10.8944ZM109.131 7.81984C109.131 8.49504 109.336 9.05571 109.746 9.50183C110.168 9.93589 110.698 10.1529 111.337 10.1529C111.988 10.1529 112.519 9.94192 112.929 9.51992C113.351 9.08585 113.562 8.51916 113.562 7.81984C113.562 7.14463 113.351 6.58999 112.929 6.15593C112.507 5.72186 111.976 5.50483 111.337 5.50483C110.71 5.50483 110.186 5.72186 109.764 6.15593C109.342 6.57793 109.131 7.13257 109.131 7.81984Z' fill='white')
				path(d='M39.8334 23.4269V16.1202H41.9132V18.3809H44.5357V20.3342H41.9132V23.3003C41.9132 24.277 42.2388 24.7653 42.8899 24.7653C43.2998 24.7653 43.7158 24.6085 44.1378 24.2951L44.7708 25.9047C44.1197 26.4352 43.3179 26.7005 42.3654 26.7005C41.4732 26.7005 40.8281 26.4292 40.4302 25.8866C40.0323 25.332 39.8334 24.5121 39.8334 23.4269Z' fill='white')
				path(d='M47.1645 20.4789L46.64 18.9597C47.5202 18.4412 48.4788 18.182 49.5157 18.182C50.6732 18.182 51.5052 18.4653 52.0116 19.032C52.518 19.5987 52.7712 20.4427 52.7712 21.5641V26.5196H50.9626V25.5792C50.4682 26.2785 49.6664 26.6281 48.5572 26.6281C47.7975 26.6281 47.1826 26.4051 46.7124 25.959C46.2421 25.5128 46.007 24.904 46.007 24.1323C46.007 23.2762 46.2843 22.6251 46.839 22.179C47.3936 21.7208 48.105 21.4917 48.9731 21.4917C49.7207 21.4917 50.3356 21.6666 50.8179 22.0162C50.842 21.3048 50.7395 20.7804 50.5104 20.4427C50.2813 20.0931 49.8774 19.9183 49.2987 19.9183C48.6958 19.9183 47.9844 20.1051 47.1645 20.4789ZM49.2444 24.8738C49.9437 24.8738 50.4682 24.6266 50.8179 24.1323V23.3003C50.4682 23.0351 49.992 22.9024 49.3891 22.9024C49.0153 22.9024 48.7018 22.9929 48.4486 23.1737C48.2075 23.3425 48.0869 23.5897 48.0869 23.9153C48.0869 24.2167 48.1954 24.4518 48.4125 24.6206C48.6295 24.7894 48.9068 24.8738 49.2444 24.8738Z' fill='white')
				path(d='M54.9033 26.5196V18.3809H56.9832V19.1767C57.4414 18.5497 58.0624 18.2363 58.8461 18.2363C59.4128 18.2363 59.8348 18.3387 60.1121 18.5437L59.3706 20.497C59.0209 20.292 58.6713 20.1895 58.3216 20.1895C57.7187 20.1895 57.2726 20.4789 56.9832 21.0577V26.5196H54.9033Z' fill='white')
				path(d='M60.2299 27.6229C60.2299 26.9718 60.4651 26.4352 60.9353 26.0132C61.4176 25.5792 62.0627 25.2777 62.8705 25.1089C62.774 24.9401 62.7258 24.7532 62.7258 24.5483C62.7258 24.3192 62.7861 24.1263 62.9067 23.9695C62.3038 23.7284 61.8275 23.3666 61.4779 22.8844C61.1403 22.39 60.9715 21.8414 60.9715 21.2385C60.9715 20.3945 61.291 19.6771 61.93 19.0863C62.5691 18.4834 63.407 18.182 64.444 18.182C65.2277 18.182 65.921 18.3749 66.5239 18.7608L68.9836 18.2182L69.0559 19.8821L67.6995 20.1895C67.8321 20.5271 67.8984 20.8768 67.8984 21.2385C67.8984 22.0705 67.5789 22.7819 66.9398 23.3727C66.3008 23.9514 65.4688 24.2408 64.444 24.2408H64.2993C64.2752 24.3131 64.2631 24.4156 64.2631 24.5483C64.2631 24.705 64.2993 24.8437 64.3716 24.9642H64.4621C65.716 24.9642 66.7349 25.1873 67.5186 25.6334C68.3023 26.0795 68.6942 26.7427 68.6942 27.6229C68.6942 28.5031 68.3023 29.1662 67.5186 29.6123C66.7349 30.0585 65.716 30.2815 64.4621 30.2815C63.196 30.2815 62.1712 30.0585 61.3875 29.6123C60.6158 29.1783 60.2299 28.5151 60.2299 27.6229ZM62.1651 27.6229C62.1651 27.9364 62.3701 28.1775 62.7801 28.3463C63.19 28.5272 63.7507 28.6176 64.4621 28.6176C65.9813 28.6176 66.7409 28.286 66.7409 27.6229C66.7409 27.3214 66.542 27.0803 66.1441 26.8994C65.7582 26.7186 65.1976 26.6281 64.4621 26.6281C63.7386 26.6281 63.1719 26.7186 62.762 26.8994C62.3641 27.0803 62.1651 27.3214 62.1651 27.6229ZM63.3407 20.2619C63.0634 20.5271 62.9248 20.8527 62.9248 21.2385C62.9248 21.6244 63.0634 21.9439 63.3407 22.1971C63.6181 22.4382 63.9858 22.5588 64.444 22.5588C64.8901 22.5588 65.2518 22.4382 65.5291 22.1971C65.8185 21.9559 65.9632 21.6364 65.9632 21.2385C65.9632 20.8406 65.8245 20.5151 65.5472 20.2619C65.282 19.9966 64.9142 19.864 64.444 19.864C63.9858 19.864 63.6181 19.9966 63.3407 20.2619Z' fill='white')
				path(d='M76.7067 24.2408L77.3035 25.7058C76.5077 26.381 75.4708 26.7186 74.1927 26.7186C72.8785 26.7186 71.8174 26.3267 71.0096 25.543C70.2138 24.7593 69.8159 23.7284 69.8159 22.4503C69.8159 21.2325 70.2078 20.2197 70.9915 19.4118C71.7752 18.5919 72.8182 18.182 74.1204 18.182C75.1935 18.182 76.1038 18.5377 76.8514 19.2491C77.5989 19.9484 77.9727 20.8527 77.9727 21.962C77.9727 22.4201 77.9305 22.7939 77.8461 23.0833H71.9682C72.0526 23.6862 72.3178 24.1564 72.7639 24.494C73.2101 24.8196 73.7587 24.9823 74.4098 24.9823C75.3261 24.9823 76.0918 24.7351 76.7067 24.2408ZM74.03 19.9183C72.8483 19.9183 72.137 20.5091 71.8958 21.6907H75.8928C75.9049 21.1843 75.7421 20.7623 75.4045 20.4247C75.0669 20.0871 74.6087 19.9183 74.03 19.9183Z' fill='white')
				path(d='M79.4671 23.4269V16.1202H81.5469V18.3809H84.1694V20.3342H81.5469V23.3003C81.5469 24.277 81.8725 24.7653 82.5236 24.7653C82.9335 24.7653 83.3495 24.6085 83.7715 24.2951L84.4045 25.9047C83.7534 26.4352 82.9516 26.7005 81.9991 26.7005C81.1068 26.7005 80.4618 26.4292 80.0639 25.8866C79.666 25.332 79.4671 24.5121 79.4671 23.4269Z' fill='white')
				path(d='M1.99988 7.6121C1.99988 4.61564 4.42899 2.18652 7.42545 2.18652H22.2086C25.2051 2.18652 27.6342 4.61563 27.6342 7.61209V22.3953C27.6342 25.3917 25.2051 27.8208 22.2086 27.8208H7.42545C4.429 27.8208 1.99988 25.3917 1.99988 22.3953V7.6121Z' stroke='white' stroke-width='2.80029')
				path(d='M18.7123 10.2124C17.6572 9.37307 16.3213 8.87158 14.8683 8.87158C11.4556 8.87158 8.68896 11.6382 8.68896 15.0509C8.68896 18.4637 11.4556 21.2303 14.8683 21.2303C16.3213 21.2303 17.6572 20.7288 18.7123 19.8895' stroke='white' stroke-width='2.42837')
				circle(cx='14.8172' cy='15.0509' r='1.57284' transform='rotate(90 14.8172 15.0509)' fill='white')


//- PICTURE

//- type: `jpg`/ `png` or jpg/ png if so-called var exsist
	src: `${path}/to/img`  - without postfixes and dimensions
	dimentions: `s`/ `sml`/ `sl`/ `smlx`/ `sx`....
	retina: true/ false

	Атрибуты типа class, alt записываются как обычно в скобках сразу за миксином  --> +picture(jpg, 'tmp')(class="pic" alt="lev")

	Называть картинку так --> any-name-sm.jpg / any-name-lg@2x.png

- var jpg = `jpg`, png = `png`, svg = `svg` //- для удобства

- var globalRetinaUsage = `` //- `` -if false
- var globalDimentionsUsage = `sml`

- var postfixRetina = '@2x'
- var postfix = { xs: `-xs`, sm: `-sm`, md: `-md`, lg: `-lg`, xl: `-xl` } //- `smlx`

mixin picture(type, src, dimentions = globalDimentionsUsage, retina = globalRetinaUsage)
	picture
		if type != 'jpg' && type != 'png'
			if dimentions.includes(`n`)
				source(srcset=ipl data-srcset!=`${src}.${type}`)
				img.lazyload(src!=ipl data-src!=`${src}.${type}` alt='')&attributes(attributes)
			else
				if dimentions.includes(`b`)
					source(media=`(min-width: ${xl}px)` srcset=ipl data-srcset!=`${src + postfix.xl}.${type}`)
				if dimentions.includes(`l`)
					source(media=`(min-width: ${lg}px)` srcset=ipl data-srcset!=`${src + postfix.lg}.${type}`)
				if dimentions.includes(`m`)
					source(media=`(min-width: ${md}px)` srcset=ipl data-srcset!=`${src + postfix.md}.${type}`)
				if dimentions.includes(`s`)
					source(media=`(min-width: ${sm}px)` srcset=ipl data-srcset!=`${src + postfix.md}.${type}`)
				if dimentions.includes(`x`)
					source(media=`(min-width: 0px)` srcset=ipl data-srcset!=`${src + postfix.sm}.${type}`)
				if dimentions.includes(`l`)
					img.lazyload(src!=ipl data-src!=`${src + postfix.lg}.${type}` alt='')&attributes(attributes)
				else
					img.lazyload(src!=ipl data-src!=`${src + postfix.md}.${type}` alt='')&attributes(attributes)
		else
			if dimentions.includes(`n`)
				source(srcset=ipl data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.webp 2x, ` : ``}${src}.webp${retina.includes(`n`) ? ` 1x` : ``}` type=`image/webp`)
				source(srcset=ipl data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.${type} 2x, ` : ``}${src}.${type}${retina.includes(`n`) ? ` 1x` : ``}` type=`image/${type}`)
				img.lazyload(src!=ipl data-src!=`${src}.${type}` alt='')&attributes(attributes)
			else
				if dimentions.includes(`b`)
					source(media=`(min-width: ${xl}px)` srcset=ipl data-srcset!=`${retina.includes(`b`) ? `${src + postfix.xl + postfixRetina}.webp 2x, ` : ``}${src + postfix.xl}.webp${retina.includes(`b`) ? ` 1x` : ``}` type=`image/webp`)
					source(media=`(min-width: ${xl}px)` srcset=ipl data-srcset!=`${retina.includes(`b`) ? `${src + postfix.xl + postfixRetina}.${type} 2x, ` : ``}${src + postfix.xl}.${type}${retina.includes(`b`) ? ` 1x` : ``}` type=`image/${type}`)
				if dimentions.includes(`l`)
					source(media=`(min-width: ${lg}px)` srcset=ipl data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.webp 2x, ` : ``}${src + postfix.lg}.webp${retina.includes(`l`) ? ` 1x` : ``}` type=`image/webp`)
					source(media=`(min-width: ${lg}px)` srcset=ipl data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.${type} 2x, ` : ``}${src + postfix.lg}.${type}${retina.includes(`l`) ? ` 1x` : ``}` type=`image/${type}`)
				if dimentions.includes(`m`)
					source(media=`(min-width: ${md}px)` srcset=ipl data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.webp 2x, ` : ``}${src + postfix.md}.webp${retina.includes(`m`) ? ` 1x` : ``}` type=`image/webp`)
					source(media=`(min-width: ${md}px)` srcset=ipl data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.${type} 2x, ` : ``}${src + postfix.md}.${type}${retina.includes(`m`) ? ` 1x` : ``}` type=`image/${type}`)
				if dimentions.includes(`s`)
					source(media=`(min-width: ${sm}px)` srcset=ipl data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.webp 2x, ` : ``}${src + postfix.sm}.webp${retina.includes(`s`) ? ` 1x` : ``}` type=`image/webp`)
					source(media=`(min-width: ${sm}px)` srcset=ipl data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.${type} 2x, ` : ``}${src + postfix.sm}.${type}${retina.includes(`s`) ? ` 1x` : ``}` type=`image/${type}`)
				if dimentions.includes(`x`)
					source(media=`(min-width: 0px)` srcset=ipl data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xs + postfixRetina}.webp 2x, ` : ``}${src + postfix.xs}.webp${retina.includes(`x`) ? ` 1x` : ``}` type=`image/webp`)
					source(media=`(min-width: 0px)` srcset=ipl data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xs + postfixRetina}.${type} 2x, ` : ``}${src + postfix.xs}.${type}${retina.includes(`x`) ? ` 1x` : ``}` type=`image/${type}`)
				if dimentions.includes(`l`)
					img.lazyload(src!=ipl data-src!=`${src + postfix.lg}.${type}` alt='')&attributes(attributes)
				else
					img.lazyload(src!=ipl data-src!=`${src + postfix.md}.${type}` alt='')&attributes(attributes)
			
mixin picture-min(type, src, minSrc,  dimentions = globalDimentionsUsage, retina = globalRetinaUsage)
	picture
		if dimentions.includes(`n`)
			source(srcset=`${minSrc}-min.${type}` data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.webp 2x, ` : ``}${src}.webp${retina.includes(`n`) ? ` 1x` : ``}` type=`image/webp`)
			source(srcset=`${minSrc}-min.${type}` data-srcset!=`${retina.includes(`n`) ? `${src + postfixRetina}.${type} 2x, ` : ``}${src}.${type}${retina.includes(`n`) ? ` 1x` : ``}` type=`image/${type}`)
			img.lazyload.lazymin(src!=`${minSrc}-min.${type}` data-src!=`${src}.${type}` alt='')&attributes(attributes)
		else
			if dimentions.includes(`b`)
				source(media=`(min-width: ${xl}px)` srcset=`${minSrc + postfix.xl}-min.${type}` data-srcset!=`${retina.includes(`b`) ? `${src + postfix.xl + postfixRetina}.webp 2x, ` : ``}${src + postfix.xl}.webp${retina.includes(`b`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${xl}px)` srcset=`${minSrc + postfix.xl}-min.${type}` data-srcset!=`${retina.includes(`b`) ? `${src + postfix.xl + postfixRetina}.${type} 2x, ` : ``}${src + postfix.xl}.${type}${retina.includes(`b`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`l`)
				source(media=`(min-width: ${lg}px)` srcset=`${minSrc + postfix.lg}-min.${type}` data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.webp 2x, ` : ``}${src + postfix.lg}.webp${retina.includes(`l`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${lg}px)` srcset=`${minSrc + postfix.lg}-min.${type}` data-srcset!=`${retina.includes(`l`) ? `${src + postfix.lg + postfixRetina}.${type} 2x, ` : ``}${src + postfix.lg}.${type}${retina.includes(`l`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`m`)
				source(media=`(min-width: ${md}px)` srcset=`${minSrc + postfix.md}-min.${type}` data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.webp 2x, ` : ``}${src + postfix.md}.webp${retina.includes(`m`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${md}px)` srcset=`${minSrc + postfix.md}-min.${type}` data-srcset!=`${retina.includes(`m`) ? `${src + postfix.md + postfixRetina}.${type} 2x, ` : ``}${src + postfix.md}.${type}${retina.includes(`m`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`s`)
				source(media=`(min-width: ${sm}px)` srcset=`${minSrc + postfix.sm}-min.${type}` data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.webp 2x, ` : ``}${src + postfix.sm}.webp${retina.includes(`s`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: ${sm}px)` srcset=`${minSrc + postfix.sm}-min.${type}` data-srcset!=`${retina.includes(`s`) ? `${src + postfix.sm + postfixRetina}.${type} 2x, ` : ``}${src + postfix.sm}.${type}${retina.includes(`s`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`x`)
				source(media=`(min-width: 0px)` srcset=`${minSrc + postfix.xs}-min.${type}` data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xs + postfixRetina}.webp 2x, ` : ``}${src + postfix.xs}.webp${retina.includes(`x`) ? ` 1x` : ``}` type=`image/webp`)
				source(media=`(min-width: 0px)` srcset=`${minSrc + postfix.xs}-min.${type}` data-srcset!=`${retina.includes(`x`) ? `${src + postfix.xs + postfixRetina}.${type} 2x, ` : ``}${src + postfix.xs}.${type}${retina.includes(`x`) ? ` 1x` : ``}` type=`image/${type}`)
			if dimentions.includes(`l`)
				img.lazyload.lazymin(src!=`${minSrc + postfix.lg}-min.${type}` data-src!=`${src + postfix.lg}.${type}` alt='')&attributes(attributes)
			else
				img.lazyload.lazymin(src!=`${minSrc + postfix.md}-min.${type}` data-src!=`${src + postfix.md}.${type}` alt='')&attributes(attributes)
